<?php
namespace spamtonprof\stp_api;

use Exception;
use Gregwar;

/**
 *
 * @author alexg
 *        
 */
class LbcApi implements \JsonSerializable
{

    private $slack;

    const cat_deco = 39, cat_cours_particuliers = 36, ameublement = 19, art_table = 45, chaussure = 53, vetements = 22, informatique = 15;

    const telephonie = 17;

    const jeux = 41;

    const sports = 29;

    const velos = 55;

    const montres = 42;

    const electromenager = 20;

    const coloc = 11;

    const decoration = 39;

    const vente_immo = 9;

    const folder_info = "informatique";

    const folder_telephone = "telephone";

    const folder_jeu_societe = "jeusociete";

    const folder_boxe = "boxe";

    const folder_golf = "golf";

    const folder_velo = "velo";

    private $cookie_datadome;

    function __construct()
    {
        $this->slack = new \spamtonprof\slack\Slack();

        // $this->cookie_datadome = 'Gn3MKDnibULmesktqg2XNsQOxNkmVWMaQsOXeD63M9Td9~77LzWmp5kgRKGfS548xYOxHeZBJl95scuNbSB5WlGvOOdUcdvte.J_JQOa1M';

        // $this->cookie_datadome = '8iCiTIvy1sxniKUgTx5JSCcn1RjJ_.cGdeNgYDFdpumxPvUAvRttQgMw33yMub0bNP.TcmrM4~5BL40Qc6ED8kau18v~38nwYe5XtMhBrh';

        $this->cookie_datadome = unserializeTemp("/tempo/datadome");
    }

    function get_maths_ads($offset = 0)
    {

        // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
        $ch = curl_init();

        curl_setopt($ch, CURLOPT_URL, 'https://api.leboncoin.fr/finder/search');
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_POSTFIELDS, "{\"filters\":{\"category\":{\"id\":\"36\"},\"enums\":{\"ad_type\":[\"offer\"]},\"keywords\":{\"text\":\"maths\"},\"location\":{},\"ranges\":{}},\"limit\":35,\"limit_alu\":3,\"offset\":" . $offset . "}");
        curl_setopt($ch, CURLOPT_POST, 1);
        curl_setopt($ch, CURLOPT_ENCODING, 'gzip, deflate');

        $headers = array();
        $headers[] = 'User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:67.0) Gecko/20100101 Firefox/67.0';
        $headers[] = 'Accept: */*';
        $headers[] = 'Accept-Language: fr,fr-FR;q=0.8,en-US;q=0.5,en;q=0.3';
        $headers[] = 'Api_key: ba0c2dad52b3ec';
        $headers[] = 'Content-Type: text/plain;charset=UTF-8';
        $headers[] = 'Origin: https://www.leboncoin.fr';
        $headers[] = 'Connection: keep-alive';
        $headers[] = 'Referer: https://www.leboncoin.fr/recherche/?category=36&text=maths&page=2';
        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

        $result = curl_exec($ch);
        if (curl_errno($ch)) {
            echo 'Error:' . curl_error($ch);
            return (false);
        }
        curl_close($ch);

        $ads = json_decode($result);

        return ($ads);
    }

    function getUserId($luat)
    {

        // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
        $ch = curl_init();

        curl_setopt($ch, CURLOPT_URL, 'https://api.leboncoin.fr/api/accounts/v1/accounts/me/personaldata');
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');

        curl_setopt($ch, CURLOPT_ENCODING, 'gzip, deflate');

        $headers = array();
        $headers[] = 'User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:69.0) Gecko/20100101 Firefox/69.0';
        $headers[] = 'Accept: */*';
        $headers[] = 'Accept-Language: fr,fr-FR;q=0.8,en-US;q=0.5,en;q=0.3';
        $headers[] = 'Referer: https://www.leboncoin.fr/';
        $headers[] = 'Authorization: Bearer ' . $luat;
        $headers[] = 'Content-Type: application/json';
        $headers[] = 'Origin: https://www.leboncoin.fr';
        $headers[] = 'Connection: keep-alive';
        $headers[] = 'Cookie: _ENV["xtvrn=562498; xtan562498=-undefined; xtant562498=1; utag_main=_st:1571737174751v_id:016df2ba6edd000970898ac434fe0004c001900900bd0_sn:1_ss:1_pn:1%3Bexp-sessionses_id:1571735367389%3Bexp-session; "datadome=' . $this->cookie_datadome . '; ABTasty=uid%3D19102211092523812%26fst%3D1571735366001%26pst%3Dnull%26cst%3D1571735366001%26ns%3D1%26pvt%3D1%26pvis%3D1%26th%3D; ABTastySession=sen%3D6__referrer%3D__landingPage%3Dhttps%3A//www.leboncoin.fr/; cikneeto_uuid=id:45683dcd-b743-4221-a5db-72c1406533ac; _gcl_au=1.1.388330095.1571735366; consent_allpurpose=cDE9MTtwMj0xO3AzPTE7cDQ9MTtwNT0x; cookieBanner=1; cikneeto=date:1571735388342; cto_lwid=4be997a6-eb26-4020-a4f4-c0ff92790f21; _pulse2data=b8fdaaa8-91d1-4978-9db4-5dbf5568f5b1%2Cv%2C%2C1571736269194%2CeyJpc3N1ZWRBdCI6IjIwMTktMTAtMjJUMDk6MDk6MjlaIiwiZW5jIjoiQTEyOENCQy1IUzI1NiIsImFsZyI6ImRpciIsImtpZCI6IjIifQ..OqPR8naDPikOlehgxT0w1w.d9VfmHaGt8YSMisNjwXV41rWgGpSW2oqORn9yHx16YS2OLxjFgWH5T3C_XwWSOF4y__2JH3cqfa20VDsE42kxthtCwPkqPwPzF3G1Vw6KFzuVrDFA4lA-Rr4AJfWBtgsF9aGgHo2p79OM0mgQ1-4t1j0wKahi8_5g5hGMEVUWODqGqFgE0QybqKCCfw01LHi1jx1Pn_MATlj0iZPq3Gfyg.Ki_nI32QObDw9rgnq4h0wQ%2C%2C0%2Ctrue%2C%2CeyJraWQiOiIyIiwiYWxnIjoiSFMyNTYifQ..lxIylCjw3FWn0--xp0Mr8iP8jJOi_G4Jb1q7ycCdY2Q; _fbp=fb.1.1571735369905.1947140537; cto_bundle=JVjH4V9yeCUyQk02dnk1TUY2ZzJmUjAlMkJFMm1VYm1aTVJXWm5FZUNVdmI3UiUyRmlwaFM2MWpxRUp0NGgzVUN2elB1Q0xxNEgyVnJrM3NpNGt0NUtOaVQ0VTVNUzRSYjAxa1ZaV2pkSzhVRTdKY0ltbTNKamR1RG1pWk9EeEN5ZHVLM0xLRGYzRA; luat=eyJhbGciOiJSUzI1NiIsImtpZCI6IjA2MGMwYTgyLTk0YzktNTQ0Ny1iYjFjLWFkMGI1YzhkNGU5NSIsInR5cCI6IkpXVCJ9.eyJjbGllbnRfaWQiOiJnb2xsdW0iLCJleHAiOjE1NzE3NDk3OTAsImlhdCI6MTU3MTczNTM4OSwiaWQiOiJjYzA3ZGY5Yy0zODNmLTQ0ZmUtYTRkNS0yZjE5MDU1YTkxODciLCJqdGkiOiIwM2I3YzhhNi01NzQ3LTQzZDMtOGZjNS02OTZkYjM4YzNhMTUiLCJyZXF1ZXN0X2lkIjoiMmU4MmQ1YjMtNDU2Ny00MzZiLTlhMjYtMmEyZGFlMDgxNGIwIiwic2NvcGVzIjpbIm9mZmxpbmUiLCJsYmMuKi5tZS4qIiwibGJjLiouKi5tZS4qIiwibGJjbGVnYWN5LnVzZXJzIiwibGJjbGVnYWN5LnBhcnQiXSwic2Vzc2lvbl9pZCI6ImJiYjYwNzUzLTdlNTItNDNhOC1hYzdhLTY4M2FjOGM5ZmIzYiIsInN1YiI6ImxiYzswMmE4YjBmOS01ODBkLTRhODItYTYzYS1iZTUwMDI4NTdmZTI7MTgzMDEyNCJ9.vZV6ntBS7Rm1yGdP0YxbV0MB6xsDECBbDGayXUW9l1HgoftI6ZdElWo_RKUgoFCkJc5NoMpo1m4OqIafJPVN27nO7isXbku0j0anO7Vw06mqZ1pyjcg7akjDAC5y1jnUnsF9vvJ0whFvTQp2rASyM74xOGLi9XifrNVPi0PPGq_FNoMy3MTplEqHKPmJOELp8d-MsKbnZDCmofqqx3sBxhNx4KXsD8riqnbSwUHC3Q2m1IWiPzgscpNVgGtHbbiFhNvcXaxT3ryWA_00tM1Hb583UAJDZRupbb0hcgfXAKPFVC7viLoS7qVFk8GEPKNWTbVuFa9YBjDatp5C6YqIK8vtQYCANBT9On-uYAeqVApZGyY_BPUAau0_tNaBrrEwppdhywpLXX7FQiXW7JLraPN5peIh4Qt5YlgXyDgXgoTtn5cuE3KtEccStJ0J4DKnTYkXAiPlSitOMnRVP9TS4jzhsxMoXAfZToNLlapZJROSU1BlFkY5EGEmHlCVEk26jHDnXqsjQL7U8Xtkvx_R7vSHSJw-77vmOf8aFkNVQvXV3Egn03DToVJLGMRbznkuyIDGcPsQSQijlHimwky7w1ihUtG3ZudORG1U13FIOTgVS3D-EGSmCcd0guPdUzqCRoSuOSFrQlVPJhkfezkz2whZgSFYRo4EJTCSlQ9WYQM; srt=Yz%2Bqz6fggzqBa3jRfX9EMtVEN9AWYWvRwMF1Yj7f8738bKsBzSZxnXxniftQsEdh]';
        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_POST, 1);
        curl_setopt($ch, CURLOPT_ENCODING, 'gzip, deflate');
        curl_setopt($ch, CURLOPT_HEADER, 1);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_VERBOSE, 1);

        $response = curl_exec($ch);
        $err = curl_error($ch);

        $header_size = curl_getinfo($ch, CURLINFO_HEADER_SIZE);
        $header = substr($response, 0, $header_size);
        $body = substr($response, $header_size);

        $cookies = extract_cookies($response);

        $lbcRep = false;
        if ($err) {
            echo "cURL Error #:" . $err;
            die();
        } else {
            $lbcRep = json_decode($body);
        }

        if (! $lbcRep) {
            return (false);
        } else {
            $this->cookie_datadome = $cookies['datadome'];
            serializeTemp($this->cookie_datadome, "/tempo/datadome");
        }

        return ($lbcRep->userId);
    }

    function getTexts($info, $offset = 0)
    {
        $ads = $this->getAdds($info, $offset);

        $res = property_exists($ads, "ads");

        $txts = [];
        if ($res) {
            $ads = $ads->ads;

            foreach ($ads as $ad) {
                $txts[] = $ad->body;
            }
            return ($txts);
        }

        return (false);
    }

    function get_ads_by_cats($category, $keyword, $prix_min, $folder, $print = false)
    {
        $offset = random_int(0, 1000);

        $ranges = array(
            "price" => array(
                "min" => $prix_min
            )
        );

        $ads = $this->get_ads($category, $keyword, $offset, 100, $ranges);

        if (! isset($ads->ads)) {

            return (false);
        }

        $ads = $ads->ads;

        $ads_valid = [];

        foreach ($ads as $ad) {

            $ad_valid = $this->format_ad($ad);

            if (! $ad_valid) {
                continue;
            }

            $body_len = strlen($ad_valid->body);

            if (preg_match('(récupérer à|venir chercher sur|à retirer |RDV|Disponible sur |Dispo sur |remise en main-propre| a côté| à côté|secteur|alentours|proximité|le mans|réunion|verdun|paris|remise en main propre|direction|transilien|gare|pas de mail|zc|chez|t.l.phone|06|07|02|remise sur|proche|banlieue|sur place|nantes|pas au mail|t.l.phone uniquement|uniquement par t.l.phone|m.tro)', strtolower($ad_valid->body)) === 1) {
                continue;
            }

            if ($body_len < 50 || $body_len > 1000) {

                continue;
            }

            $ads_valid[] = $ad_valid;
        }

        shuffle($ads_valid);
        $ad = array_pop($ads_valid);

        $ad = $this->import_ad_image($ad, $folder);

        if ($print) {

            echo ($ad->subject . '<br>');
            echo ($ad->body . '<br>');
            echo ($ad->price . ' € <br>');
            echo ('<img src="' . $ad->image . '" >');
        }

        return ($ad);
    }

    function get_smartphone_ad($print = false)
    {
        $category = $this::telephonie;
        $offset = random_int(0, 1000);

        $ranges = array(
            "price" => array(
                "min" => 100
            )
        );

        $ads = $this->get_ads($category, 'smartphone neuf', $offset, 100, $ranges);

        $ads = $ads->ads;

        $ads_valid = [];

        foreach ($ads as $ad) {

            $ad_valid = $this->format_ad($ad);

            if (! $ad_valid) {
                continue;
            }

            $body_len = strlen($ad_valid->body);

            if (preg_match('(t.l.phone|06|07|02|remise sur|proche|banlieue|sur place|nantes|pas au mail|t.l.phone uniquement|uniquement par t.l.phone)', strtolower($ad_valid->body)) === 1) {
                continue;
            }

            if ($body_len < 50 || $body_len > 1000) {

                continue;
            }

            $ads_valid[] = $ad_valid;
        }

        shuffle($ads_valid);
        $ad = array_pop($ads_valid);

        $ad = $this->import_ad_image($ad, $this::folder_telephone);

        if ($print) {

            echo ($ad->subject . '<br>');
            echo ($ad->body . '<br>');
            echo (strlen($ad_valid->body) . '<br>');
            echo ($ad->price . ' € <br>');
            echo ('<img src="' . $ad->image . '" >');
        }

        return ($ad);
    }

    function get_ordinateur_portable_ad($print = false)
    {
        $category = $this::informatique;
        $offset = random_int(0, 1000);

        // $ranges = new \stdClass();
        $ranges = array(
            "price" => array(
                "min" => 100
            )
        );

        $ads = $this->get_ads($category, 'ordinateur portable neuf', $offset, 100, $ranges);

        $ads = $ads->ads;

        $ads_valid = [];

        foreach ($ads as $ad) {

            $ad_valid = $this->format_ad($ad);

            if (! $ad_valid) {
                continue;
            }

            $body_len = strlen($ad_valid->body);

            if ($body_len < 50 || $body_len > 1000) {

                continue;
            }

            $ads_valid[] = $ad_valid;
        }

        shuffle($ads_valid);
        $ad = array_pop($ads_valid);

        $ad = $this->import_ad_image($ad, $this::folder_info);

        if ($print) {

            echo ($ad->subject . '<br>');
            echo ($ad->body . '<br>');
            echo (strlen($ad_valid->body) . '<br>');
            echo ($ad->price . ' € <br>');
            echo ('<img src="' . $ad->image . '" >');
        }

        return ($ad);
    }

    function get_nike_ad($print = false)
    {
        $category = $this::chaussure;
        $offset = random_int(0, 1000);

        $ads = $this->get_ads($category, 'nike neuf', $offset, 100);

        $ads = $ads->ads;

        $ads_valid = [];

        foreach ($ads as $ad) {

            $ad_valid = $this->format_ad($ad);

            if (! $ad_valid) {
                continue;
            }

            $body_len = strlen($ad_valid->body);

            if ($body_len > 50) {
                continue;
            }

            $attributes = $ad->attributes;

            foreach ($attributes as $attribute) {

                if (! property_exists($attribute, 'key_label')) {
                    continue;
                }

                $key_label = $attribute->key_label;
                $value_label = $attribute->value_label;

                if ($key_label == "Univers") {
                    $ad_valid->univers = $value_label;
                }
            }

            $ads_valid[] = $ad_valid;
        }

        shuffle($ads_valid);
        $ad = array_pop($ads_valid);

        $ad = $this->import_ad_image($ad, "nike_shoes");

        if ($print) {

            echo ($ad->subject . '<br>');
            echo ($ad->body . '<br>');
            echo ($ad->price . ' € <br>');
            echo ($ad->univers . '<br>');
            echo ('<img src="' . $ad->image . '" >');
        }

        return ($ad);
    }

    function get_random_ad($print = false)
    {
        ini_set('allow_url_fopen', 1);

        $ads = $this->getAdds(array(
            'key' => 'random_cat'
        ));

        $ads = $ads->ads;

        // prettyPrint($ads);

        $ads_valid = [];

        foreach ($ads as $ad) {

            $ad_valid = new \stdClass();

            $ad_valid->category = $ad->category_name;

            if (property_exists($ad, "price")) {
                $ad_valid->price = $ad->price[0];
            } else {
                continue;
            }

            $ad_valid->body = $ad->body;
            $ad_valid->subject = $ad->subject;

            $images = $ad->images;
            if (property_exists($images, "urls")) {
                $ad_valid->image = $images->urls[0];
            } else {
                continue;
            }

            $body_len = strlen($ad_valid->body);

            // echo($body_len . "<br>");

            if ($body_len <= 50) {

                $ads_valid[] = $ad_valid;
            }
        }

        $ad = $ads_valid[random_int(0, count($ads_valid) - 1)];

        $url = $ad->image;

        $img_name = explode('/', $url);

        $img_name = $img_name[count($img_name) - 1];

        $rel_path = 'wp-content/uploads/lbc_images/random/' . $img_name;

        $img_path = ABSPATH . $rel_path;

        $ch = curl_init($url);
        $fp = fopen($img_path, 'wb');
        curl_setopt($ch, CURLOPT_FILE, $fp);
        curl_setopt($ch, CURLOPT_HEADER, 0);
        curl_exec($ch);
        curl_close($ch);
        fclose($fp);

        $ad->image = 'http://' . DOMAIN . $rel_path;

        list ($width, $height) = getimagesize($img_path);

        Gregwar\Image\Image::open($img_path)->crop(0.1 * $width, 0.1 * $height, 0.8 * $width, 0.8 * $height)->save($img_path);

        if ($print) {

            echo ($ad->subject . '<br>');
            echo ($ad->body . '<br>');
            echo ($ad->price . ' € <br>');
            echo ('<img src="' . $ad->image . '" >');
        }

        return ($ad);
    }

    // met une ad leboncoin à un format adapté à la republication par le robot ( extrait body subject price et lien image )
    function format_ad($ad)
    {
        $ad_valid = new \stdClass();

        $ad_valid->category = $ad->category_name;

        if (property_exists($ad, "price")) {
            $ad_valid->price = $ad->price[0];
        } else {
            return (false);
        }

        $ad_valid->body = $ad->body;
        $ad_valid->subject = $ad->subject;

        $images = $ad->images;
        if (property_exists($images, "urls")) {
            $ad_valid->image = $images->urls[0];
        } else {
            return (false);
        }

        return ($ad_valid);
    }

    function serialize_ads($category, $keyword, $prix_min, $ad_folder, $nb_ads = 40)
    {
        $ads = [];
        for ($i = 0; $i < $nb_ads; $i ++) {
            $ad = $this->get_ads_by_cats($category, $keyword, $prix_min, $ad_folder, true);
            if ($ad) {
                echo ("ad<br>");
                $ads[] = $ad;
            }
        }

        serializeTemp($ads, "/tempo/" . $ad_folder);
    }

    function get_local_ad($ad_folder)
    {
        $ads = unserializeTemp("/tempo/" . $ad_folder);

        return ($ads[array_rand($ads, 1)]);
    }

    function get_local_nike_ad()
    {
        $ads = unserializeTemp("/tempo/nike_ads");
        return ($ads[array_rand($ads, 1)]);
    }

    function import_ad_image($ad, $folder)
    {
        $url = $ad->image;

        $img_name = explode('/', $url);

        $img_name = $img_name[count($img_name) - 1];

        $rel_path = 'wp-content/uploads/lbc_images/' . $folder . '/' . $img_name;

        $img_path = ABSPATH . $rel_path;

        $ch = curl_init($url);
        $fp = fopen($img_path, 'wb');
        curl_setopt($ch, CURLOPT_FILE, $fp);
        curl_setopt($ch, CURLOPT_HEADER, 0);
        curl_exec($ch);
        curl_close($ch);
        fclose($fp);

        $ad->image = $rel_path;

        list ($width, $height) = getimagesize($img_path);

        Gregwar\Image\Image::open($img_path)->crop(0.1 * $width, 0.1 * $height, 0.8 * $width, 0.8 * $height)->save($img_path);

        return ($ad);
    }

    function get_ads_clothes($print = false)
    {
        $category = $this::vetements;
        $offset = random_int(0, 1000);

        $ads = $this->get_ads($category, 'zara neuf', $offset, 100);

        $ads = $ads->ads;

        $ads_valid = [];

        foreach ($ads as $ad) {

            $ad_valid = $this->format_ad($ad);

            if (! $ad_valid) {
                continue;
            }

            $body_len = strlen($ad_valid->body);

            if ($body_len > 50) {
                continue;
            }

            $attributes = $ad->attributes;

            foreach ($attributes as $attribute) {

                if (! property_exists($attribute, 'key_label')) {
                    continue;
                }

                $key_label = $attribute->key_label;
                $value_label = $attribute->value_label;

                if ($key_label == "Univers") {
                    $ad_valid->univers = $value_label;
                }
            }

            $ads_valid[] = $ad_valid;
        }
        // prettyPrint($ads_valid);

        shuffle($ads_valid);
        $ad = array_pop($ads_valid);

        // $ad = $this->import_ad_image($ad);

        if ($print) {

            echo ($ad->subject . '<br>');
            echo ($ad->body . '<br>');
            echo ($ad->price . ' € <br>');
            echo ($ad->univers . '<br>');
            echo ('<img src="' . $ad->image . '" >');
        }

        return ($ad);
    }

    function get_page($url)
    {
        
        $curl = curl_init();

        
        if(!substr($url, -1) == "/"){
            $url = $url . "/";
        }
        
        $headers = array();
        $headers[] = 'User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:69.0) Gecko/20100101 Firefox/69.0';
        $headers[] = 'Accept: */*';
        $headers[] = 'Accept-Language: fr,fr - FR;q=0.8,en - US;q=0.5,en;q=0.3';
        $headers[] = 'Referer:
        https: // www.leboncoin.fr/recherche/?text=nike&locations=r_7';
        $headers[] = 'Api_key: ba0c2dad52b3ec';
        $headers[] = 'Content-Type: application/json';
        $headers[] = 'Origin: https://www.leboncoin.fr';
        $headers[] = 'Connection: keep-alive';
        $headers[] = 'Cookie: _ENV["datadome=' . $this->cookie_datadome . '; ABTasty=uid%3D19100614412715504%26fst%3D1570365687435%26pst%3Dnull%26cst%3D1570365687435%26ns%3D1%26pvt%3D5%26pvis%3D5%26th%3D; ABTastySession=sen%3D21__referrer%3D__landingPage%3Dhttps%3A//www.leboncoin.fr/; cikneeto_uuid=id:fd4738ba-e7af-4a0f-a228-eefaf5a6c99e; _gcl_au=1.1.2037802551.1570365687; cikneeto=date:1570366905871; consent_allpurpose=cDE9MTtwMj0xO3AzPTE7cDQ9MTtwNT0x; cookieBanner=1; utag_main=v_id:016da116cbf20014cc52dc40d7dd0004c001900900bd0_sn:1_ss:0_pn:2%3Bexp-session_st:1570368705660ses_id:1570365688818%3Bexp-session; xtvrn=562498; xtan562498=-undefined; xtant562498=1; cto_lwid=40b20c18-da25-456e-9177-902a4da85224; _pulse2data=9af27d9e-a067-40f3-b6c3-887214ecca21%2Cv%2C%2C1570367689490%2CeyJpc3N1ZWRBdCI6IjIwMTktMTAtMDZUMTI6NDE6MjlaIiwiZW5jIjoiQTEyOENCQy1IUzI1NiIsImFsZyI6ImRpciIsImtpZCI6IjIifQ..JdkB3pM_kc30lX5VMP54Uw.8jawGme9E4jVcDobZb55Mqr96j6CKMu-2_C9-AxkeY7w-catWdCBt35_dtmbyqZV9Bru9zl2RDjhs2oNRWzpMfy5aTdwfGjKIdM9yDLh89A4bTgmY2EGgqcBR9Nb2pKD3DqWPgggKhboDbyTFuZ61NmyLsyKSd1_ze-TrJYYKtQA9CSvtqC-HTE_ziirqUOznsK_4yckfv4lKav3QZxrVg.ufWfitkciGAAYt3PCKo0NQ%2C%2C0%2Ctrue%2C%2CeyJraWQiOiIyIiwiYWxnIjoiSFMyNTYifQ..QqnxKllfRSukjfpazBiVeXEOIMYPKeLteyUJoUfNTbA; _fbp=fb.1.1570365690280.1099195613; cto_bundle=y2JxzF9xaExQZ1NpUiUyRkR6SkJKZFRXMDc2NDZETTNZalZTb0JXc1RIVSUyQlN2Y2FBcE5HMUZnQWpxSTNvdWNXOUFtYnNuQ2ttbVNjV2s5a0VobjFHVEhxeDFzMyUyQnlKek1JOVVNV2dqYlVtaWVoY2VZQktKQjNLcUgxRnZqMEh0M0hVSmVsNQ; sq=ca=7_s; shippableOnboarding=1; saveOnboarding=1"]';

        curl_setopt($curl, CURLOPT_URL, $url);
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($curl, CURLOPT_POST, 1);
        curl_setopt($curl, CURLOPT_ENCODING, 'gzip, deflate');
        curl_setopt($curl, CURLOPT_HEADER, 1);
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($curl, CURLOPT_VERBOSE, 1);

        curl_setopt($curl, CURLOPT_HTTPHEADER, $headers);

        $response = curl_exec($curl);
        $err = curl_error($curl);

        $header_size = curl_getinfo($curl, CURLINFO_HEADER_SIZE);
        $header = substr($response, 0, $header_size);
        $body = substr($response, $header_size);

        $cookies = extract_cookies($response);

        $this->cookie_datadome = $cookies['datadome'];
        serializeTemp($this->cookie_datadome, "/tempo/datadome");

        return ($body);
    }

    function extract_from_ads($category, $target, $keyword = "", $ranges = false, $filters = false)
    {
        $ads_immo_mg = new \spamtonprof\stp_api\LbcAdsImmoManager();

        $most_recent_ad = false;
        $most_recent_ad = $ads_immo_mg->get_most_recent_ad($target, $category);

        
//         prettyPrint($most_recent_ad);
        $last_index_date = false;
        if ($most_recent_ad) {
            $last_index_date = $most_recent_ad->getIndex_date();

            $last_index_date = date_create_from_format(PG_DATETIME_FORMAT, $last_index_date);
        }

        $row = [];

        $nb_ad = 0;

        $offset = 0;
        $continue = true;
        do {
            $ads = $this->get_ads($category, $keyword, $offset, 100, $ranges, $filters);

            if (! isset($ads->ads)) {
                echo ("offset : $offset<br>");
                echo ("fin<br>");
                $continue = false;
                break;
            }

            $ads = $ads->ads;

            foreach ($ads as $ad) {

                if (! isset($ad->price)) {
                    echo ("saut" . '<br>');
                    continue;
                }

                $nb_ad = $nb_ad + 1;

                $city = $ad->location->city;
                $zipcode = $ad->location->zipcode;

                $price = $ad->price;
                $body = $ad->body;
                $index_date = $ad->index_date;

                $url = $ad->url;
                $attributes = $ad->attributes;
                $first_publication_date = $ad->first_publication_date;

                $first_publication_date = date_create_from_format(PG_DATETIME_FORMAT, $first_publication_date);

                $index_date = date_create_from_format(PG_DATETIME_FORMAT, $index_date);

                if ($last_index_date && $index_date < $last_index_date) {
                    return;
                }

                $row["price"] = $price[0];
                $row["url"] = $url;

                foreach ($attributes as $attribute) {
                    $attribute = (array) $attribute;

                    $key = $attribute["key"];
                    $value = $attribute["value"];
                    $value_label = $attribute["value_label"];

                    if ($key == "square") {
                        $row["square"] = $value;
                    }

                    if ($key == "rooms") {
                        $row["room"] = intval($value);
                    }

                    if ($key == "real_estate_type") {
                        $row["real_estate_type"] = $value_label;
                    }
                }

                $ads_immo_mg->add(new \spamtonprof\stp_api\LbcAdsImmo(array(
                    "price" => $row["price"],
                    "square" => $row["square"],
                    "url" => $row["url"],
                    "first_publication_date" => $first_publication_date,
                    "city" => $city,
                    "type_bien" => $row["real_estate_type"],
                    "category" => $category,
                    "text" => $body,
                    "zipcode" => $zipcode,
                    "index_date" => $index_date,
                    "room" => $row['room'],
                    "target" => $target
                )));

                if ($category == $this::coloc) {

                    $url = $row["url"] . "/";
                    
                    $output = $this->get_page($url);
                    

                    $url = explode("/", $url);
                    array_pop($url);
                    
                    
                    
                    $filename = array_pop($url);

                    $filename = ABSPATH . 'wp-content/plugins/spamtonprof/downloads/' . $filename;

                    file_put_contents($filename, $output);
                }
            }
            $offset = $offset + 99;
        } while ($continue);
    }

    function get_ads($category, $keyword = "", $offset = 0, $limit = 100, $ranges = false, $filters = false)
    {
        $response = false;
        $err = false;
        $curl = curl_init();

        $location = new \stdClass();

        if (! $ranges) {
            $ranges = new \stdClass();
        }

        $params = [
            "limit" => $limit,
            "offset" => $offset,
            "limit_alu" => 3,
            "filters" => [
                "category" => array(
                    "id" => strval($category)
                ),
                "enums " => array(
                    "ad_type" => array(
                        "offer"
                    )
                ),
                "location" => $location,
                "keywords" => array(
                    "text" => $keyword
                ),
                "ranges" => $ranges
            ]
        ];

        if ($filters) {
            $filters = json_decode($filters);
            $params["filters"] = $filters->filters;
        }

        $headers = array();
        $headers[] = 'User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:69.0) Gecko/20100101 Firefox/69.0';
        $headers[] = 'Accept: */*';
        $headers[] = 'Accept-Language: fr,fr - FR;q=0.8,en - US;q=0.5,en;q=0.3';
        $headers[] = 'Referer:
        https: // www.leboncoin.fr/recherche/?text=nike&locations=r_7';
        $headers[] = 'Api_key: ba0c2dad52b3ec';
        $headers[] = 'Content-Type: application/json';
        $headers[] = 'Origin: https://www.leboncoin.fr';
        $headers[] = 'Connection: keep-alive';
        $headers[] = 'Cookie: _ENV["datadome=' . $this->cookie_datadome . '; ABTasty=uid%3D19100614412715504%26fst%3D1570365687435%26pst%3Dnull%26cst%3D1570365687435%26ns%3D1%26pvt%3D5%26pvis%3D5%26th%3D; ABTastySession=sen%3D21__referrer%3D__landingPage%3Dhttps%3A//www.leboncoin.fr/; cikneeto_uuid=id:fd4738ba-e7af-4a0f-a228-eefaf5a6c99e; _gcl_au=1.1.2037802551.1570365687; cikneeto=date:1570366905871; consent_allpurpose=cDE9MTtwMj0xO3AzPTE7cDQ9MTtwNT0x; cookieBanner=1; utag_main=v_id:016da116cbf20014cc52dc40d7dd0004c001900900bd0_sn:1_ss:0_pn:2%3Bexp-session_st:1570368705660ses_id:1570365688818%3Bexp-session; xtvrn=562498; xtan562498=-undefined; xtant562498=1; cto_lwid=40b20c18-da25-456e-9177-902a4da85224; _pulse2data=9af27d9e-a067-40f3-b6c3-887214ecca21%2Cv%2C%2C1570367689490%2CeyJpc3N1ZWRBdCI6IjIwMTktMTAtMDZUMTI6NDE6MjlaIiwiZW5jIjoiQTEyOENCQy1IUzI1NiIsImFsZyI6ImRpciIsImtpZCI6IjIifQ..JdkB3pM_kc30lX5VMP54Uw.8jawGme9E4jVcDobZb55Mqr96j6CKMu-2_C9-AxkeY7w-catWdCBt35_dtmbyqZV9Bru9zl2RDjhs2oNRWzpMfy5aTdwfGjKIdM9yDLh89A4bTgmY2EGgqcBR9Nb2pKD3DqWPgggKhboDbyTFuZ61NmyLsyKSd1_ze-TrJYYKtQA9CSvtqC-HTE_ziirqUOznsK_4yckfv4lKav3QZxrVg.ufWfitkciGAAYt3PCKo0NQ%2C%2C0%2Ctrue%2C%2CeyJraWQiOiIyIiwiYWxnIjoiSFMyNTYifQ..QqnxKllfRSukjfpazBiVeXEOIMYPKeLteyUJoUfNTbA; _fbp=fb.1.1570365690280.1099195613; cto_bundle=y2JxzF9xaExQZ1NpUiUyRkR6SkJKZFRXMDc2NDZETTNZalZTb0JXc1RIVSUyQlN2Y2FBcE5HMUZnQWpxSTNvdWNXOUFtYnNuQ2ttbVNjV2s5a0VobjFHVEhxeDFzMyUyQnlKek1JOVVNV2dqYlVtaWVoY2VZQktKQjNLcUgxRnZqMEh0M0hVSmVsNQ; sq=ca=7_s; shippableOnboarding=1; saveOnboarding=1"]';

        curl_setopt($curl, CURLOPT_URL, 'https://api.leboncoin.fr/finder/search');
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($curl, CURLOPT_POST, 1);
        curl_setopt($curl, CURLOPT_ENCODING, 'gzip, deflate');
        curl_setopt($curl, CURLOPT_HEADER, 1);
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($curl, CURLOPT_VERBOSE, 1);
        curl_setopt($curl, CURLOPT_POSTFIELDS, json_encode($params));

        curl_setopt($curl, CURLOPT_HTTPHEADER, $headers);

        $response = curl_exec($curl);
        $err = curl_error($curl);

        $header_size = curl_getinfo($curl, CURLINFO_HEADER_SIZE);
        $header = substr($response, 0, $header_size);
        $body = substr($response, $header_size);

        $cookies = extract_cookies($response);

        $this->cookie_datadome = $cookies['datadome'];
        serializeTemp($this->cookie_datadome, "/tempo/datadome");

        $lbcRep = false;
        if ($err) {
            echo "cURL Error #:" . $err;
        } else {
            $lbcRep = json_decode($body);
        }

        if ($lbcRep->total == 0) {
            return (false);
        }

        return ($lbcRep);
    }

    function getAdds($info, $offset = 0)
    {
        $response = false;
        $err = false;
        $curl = curl_init();

        $headers = array();
        $headers[] = 'User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:69.0) Gecko/20100101 Firefox/69.0';
        $headers[] = 'Accept: */*';
        $headers[] = 'Accept-Language: fr,fr-FR;q=0.8,en-US;q=0.5,en;q=0.3';
        $headers[] = 'Referer: https://www.leboncoin.fr/recherche/?text=nike&locations=r_7';
        $headers[] = 'Api_key: ba0c2dad52b3ec';
        $headers[] = 'Content-Type: application/json';
        $headers[] = 'Origin: https://www.leboncoin.fr';
        $headers[] = 'Connection: keep-alive';
        $headers[] = 'Cookie: _ENV["datadome=' . $this->cookie_datadome . '; ABTasty=uid%3D19100614412715504%26fst%3D1570365687435%26pst%3Dnull%26cst%3D1570365687435%26ns%3D1%26pvt%3D5%26pvis%3D5%26th%3D; ABTastySession=sen%3D21__referrer%3D__landingPage%3Dhttps%3A//www.leboncoin.fr/; cikneeto_uuid=id:fd4738ba-e7af-4a0f-a228-eefaf5a6c99e; _gcl_au=1.1.2037802551.1570365687; cikneeto=date:1570366905871; consent_allpurpose=cDE9MTtwMj0xO3AzPTE7cDQ9MTtwNT0x; cookieBanner=1; utag_main=v_id:016da116cbf20014cc52dc40d7dd0004c001900900bd0_sn:1_ss:0_pn:2%3Bexp-session_st:1570368705660ses_id:1570365688818%3Bexp-session; xtvrn=562498; xtan562498=-undefined; xtant562498=1; cto_lwid=40b20c18-da25-456e-9177-902a4da85224; _pulse2data=9af27d9e-a067-40f3-b6c3-887214ecca21%2Cv%2C%2C1570367689490%2CeyJpc3N1ZWRBdCI6IjIwMTktMTAtMDZUMTI6NDE6MjlaIiwiZW5jIjoiQTEyOENCQy1IUzI1NiIsImFsZyI6ImRpciIsImtpZCI6IjIifQ..JdkB3pM_kc30lX5VMP54Uw.8jawGme9E4jVcDobZb55Mqr96j6CKMu-2_C9-AxkeY7w-catWdCBt35_dtmbyqZV9Bru9zl2RDjhs2oNRWzpMfy5aTdwfGjKIdM9yDLh89A4bTgmY2EGgqcBR9Nb2pKD3DqWPgggKhboDbyTFuZ61NmyLsyKSd1_ze-TrJYYKtQA9CSvtqC-HTE_ziirqUOznsK_4yckfv4lKav3QZxrVg.ufWfitkciGAAYt3PCKo0NQ%2C%2C0%2Ctrue%2C%2CeyJraWQiOiIyIiwiYWxnIjoiSFMyNTYifQ..QqnxKllfRSukjfpazBiVeXEOIMYPKeLteyUJoUfNTbA; _fbp=fb.1.1570365690280.1099195613; cto_bundle=y2JxzF9xaExQZ1NpUiUyRkR6SkJKZFRXMDc2NDZETTNZalZTb0JXc1RIVSUyQlN2Y2FBcE5HMUZnQWpxSTNvdWNXOUFtYnNuQ2ttbVNjV2s5a0VobjFHVEhxeDFzMyUyQnlKek1JOVVNV2dqYlVtaWVoY2VZQktKQjNLcUgxRnZqMEh0M0hVSmVsNQ; sq=ca=7_s; shippableOnboarding=1; saveOnboarding=1"]';

        curl_setopt($curl, CURLOPT_URL, 'https://api.leboncoin.fr/finder/search');
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($curl, CURLOPT_POST, 1);
        curl_setopt($curl, CURLOPT_ENCODING, 'gzip, deflate');
        curl_setopt($curl, CURLOPT_HEADER, 1);
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($curl, CURLOPT_VERBOSE, 1);

        if (array_key_exists('key', $info)) {

            $key = $info['key'];

            if ($key == 'random_cat') {

                $cats = [
                    $this::ameublement,
                    $this::cat_deco,
                    $this::art_table,
                    $this::electromenager
                ];

                $category = $cats[array_rand($cats)];

                $code_promo = "";

                curl_setopt($curl, CURLOPT_POSTFIELDS, "{\"limit\":100, \"offset\":" . $offset . ", \"limit_alu\":3,\"filters\":{\"category\":{\"id\":\"" . $category . "\"},\"enums\":{\"ad_type\":[\"offer\"]},\"location\":{},\"keywords\":{\"text\":\"" . $code_promo . "\"},\"ranges\":{}}}");
            }
        }

        if (array_key_exists('nike', $info)) {

            $category = $this::chaussure;

            $code_promo = $info['nike'];

            $offset = random_int(0, 5000);

            curl_setopt($curl, CURLOPT_POSTFIELDS, "{\"limit\":100, \"offset\":" . $offset . ", \"limit_alu\":3,\"filters\":{\"category\":{\"id\":\"" . $category . "\"},\"enums\":{\"ad_type\":[\"offer\"]},\"location\":{},\"keywords\":{\"text\":\"" . $code_promo . "\"},\"ranges\":{\"price\":{\"min\":50,\"max\":250}}}}");
        }

        if (array_key_exists('code_promo', $info) && array_key_exists('category', $info)) {

            $code_promo = $info['code_promo'];
            $category = $info['category'];

            curl_setopt($curl, CURLOPT_POSTFIELDS, "{\"limit\":100, \"offset\":" . $offset . ", \"limit_alu\":3,\"filters\":{\"category\":{\"id\":\"" . $category . "\"},\"enums\":{\"ad_type\":[\"offer\"]},\"location\":{},\"keywords\":{\"text\":\"" . $code_promo . "\"},\"ranges\":{}}}");
        }

        if (array_key_exists('user_id', $info)) {

            $user_id = $info['user_id'];

            curl_setopt($curl, CURLOPT_POSTFIELDS, "{\"limit\":100, \"offset\":" . $offset . ", \"filters\":{\"owner\":{\"user_id\":\"" . $user_id . "\"},\"enums\":{\"ad_type\":[\"offer\"]}},\"limit\":100}");
        }

        curl_setopt($curl, CURLOPT_HTTPHEADER, $headers);
        $response = curl_exec($curl);

        $err = curl_error($curl);

        $header_size = curl_getinfo($curl, CURLINFO_HEADER_SIZE);
        $header = substr($response, 0, $header_size);
        $body = substr($response, $header_size);

        $cookies = extract_cookies($response);

        $lbcRep = false;
        if ($err) {
            echo "cURL Error #:" . $err;
        } else {
            $lbcRep = json_decode($body);
        }

        $this->cookie_datadome = $cookies['datadome'];
        serializeTemp($this->cookie_datadome, "/tempo/datadome");

        if ($lbcRep->total == 0) {
            return (false);
        }

        return ($lbcRep);
    }

    function getCommuneOnLbcAdd($adId)
    {
        $curl = curl_init();

        curl_setopt_array($curl, array(
            CURLOPT_URL => "https://www.leboncoin.fr/cours_particuliers/" . $adId . ".htm/",
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_ENCODING => "",
            CURLOPT_MAXREDIRS => 10,
            CURLOPT_TIMEOUT => 30,
            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
            CURLOPT_CUSTOMREQUEST => "GET",
            CURLOPT_HTTPHEADER => array(
                "Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8",
                "Accept-Encoding: gzip, deflate, br",
                "Accept-Language: fr-FR,fr;q=0.9,en-US;q=0.8,en;q=0.7",
                "Cache-Control: max-age=0",
                "Connection: keep-alive",
                "DNT: 1",
                "Host: www.leboncoin.fr",
                "Postman-Token: d729c736-33ef-4bea-a828-21aff527acf8",
                "Upgrade-Insecure-Requests: 1",
                "User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/69.0.3497.81 Chrome/69.0.3497.81 Safari/537.36",
                "cache-control: no-cache"
            )
        ));

        $response = curl_exec($curl);
        $err = curl_error($curl);

        curl_close($curl);

        if ($err) {

            $this->slack->sendMessages("log", array(
                " impossible de r�cup�rer l'annonce"
            ));
            return ("error error");
        } else {

            $response;

            $match = [];

            preg_match_all('#<span data-reactid="96">(.*?)</span>#', $response, $match);

            $res = $match[1];

            preg_match_all("/(?:97|98|99) -->(.*?)<!--/", $res[0], $match);

            if ($match[1][0] == "") {

                preg_match_all('#<span data-reactid="81">(.*?)</span>#', $response, $match);

                $res = $match[1];

                preg_match_all("/(?:82|83|84) -->(.*?)<!--/", $res[0], $match);
            }

            $ret = [];
            $ret[] = $match[1][0];
            $ret[] = $match[1][2];

            $this->slack->sendMessages("log", $ret);
            return ($ret);
        }
        return (false);
    }

    public function jsonSerialize()
    {
        $vars = get_object_vars($this);

        return $vars;
    }
}

